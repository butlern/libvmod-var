#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# Internal variables
PREFIX := /usr
VMODDIR := $(PREFIX)/lib/varnish/vmods

# The following is definitely a big hack.
# 
# Problem: This package requires the varnish source to compile against.
# Launchpad doesn't provide deb-src uris in the sources.list file in the
# builder's chrooted environment so we can't run 'apt-get source varnish'.
# We want to use Launchpad to distribute our packages instead of managing
# our own apt repository.
#
# Possible Solution: Don't compile against the varnish source package! The
# varnish debian package *should* provide *-dev package(s) which provide all
# necessary header files and any other dev libraries. Unfortunately, this is
# not the case. And pushing those changes to the Debian Varnish Maintainers
# is the best solution but not practical from a time perspective.
#
# We are left with the solution below, which attempts to not hardcode values
# as much as possible as it figures out the varnish version and distribution.
# Although a lot of the legwork is done with regexes and positional assumptions
# so this could break.
# 
# You have been warned :)
# 

DISTRO := $(shell dpkg-parsechangelog|grep Distribution|awk '{print $$2}')
VARNISH_APT_VERSION := $(shell apt-cache policy varnish |tail -2|head -1|awk '{print $$1}')
UPSTREAM_VERSION := $(shell echo $(VARNISH_APT_VERSION) | cut -f 1 -d -)
APT_SOURCE_URI := $(shell egrep '^deb.* $(DISTRO) .*universe' /etc/apt/sources.list|awk '{print $$2}'|tail -1|sed 's/[/]\+$$//')
DGET_URI := $(APT_SOURCE_URI)/pool/universe/v/varnish/varnish_$(VARNISH_APT_VERSION).dsc
VARNISH_SOURCE := varnish-$(UPSTREAM_VERSION)

%:
	dh $@ 

# Override to disable tests
override_dh_auto_test:

# Override to disable installing man pages
override_dh_installman:

# Override to install varnish source, run autogen.sh and configure
override_dh_auto_configure:
	( dget -x -u $(DGET_URI) && \
        cd $(VARNISH_SOURCE) && \
        ./configure && \
        make && cd .. && \
	./autogen.sh && \
	VARNISHSRC=$(VARNISH_SOURCE) VMODDIR=$(VMODDIR) ./configure --prefix=$(PREFIX) )

# Override to remove autogen'd files
override_dh_auto_clean:
	# If Makefile exists, that means we have some cruft to clean up
	$(if $(wildcard Makefile), $(MAKE) distclean)
	rm -f man/*.[0-9] \
	rm -f man/*.in \
	rm -f Makefile.in \
	rm -f aclocal.m4 \
	rm -f compile \
	rm -f config.* \
	rm -f configure \
	rm -f depcomp \
	rm -f install-sh \
	rm -f ltmain.sh \
	rm -f m4/*.m4 \
	rm -f missing \
	rm -f src/Makefile.in \
	rm -rf varnish* \
	dh_auto_clean

.PHONY: override_dh_auto_test override_dh_installman override_dh_auto_configure override_dh_auto_clean
